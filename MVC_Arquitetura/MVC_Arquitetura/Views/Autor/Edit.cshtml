@using MVC_Arquitetura.ViewModels
@model EditaAutorViewModel

@{
    ViewBag.Title = "Criando Autor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/icon_font/css/icon_font.css" rel="stylesheet" />
<link href="~/Content/util.css" rel="stylesheet" />
<link href="~/Content/bala.DualSelectList.css" rel="stylesheet" />

<form style="margin-top:5%">
    <div class="form-group">
        <label for="exampleInputEmail1">Nome</label>
        <input type="text" class="form-control" id="txtNome" aria-describedby="nomeHelp" placeholder="Nome">
    </div>
    <br />
    <div id="dualSelectExample" style="width:500px; height:300px; background-color:#F0F0F0; padding:10px;"></div>
    <br />
    <button type="submit" onclick="SubmitDados()" class="btn btn-primary" style="width:7%">Atualizar</button>
</form>


@section scripts {

    <script src="~/Scripts/bala.DualSelectList.jquery.js"></script>

    <script type="text/javascript">

        var nome = "@Model.Autor.Nome";
        var id = @Model.Autor.Id;
        var livrosASalvar = [];
        var livroEsqTodos = [];
        var livroEsqOrigem = [];
        var livroDirOrigem = [];

        $("#txtNome").val(nome);

        livroEsqTodos = @Html.Raw(Json.Encode(Model.Livro.Select(x => new { x.Id, x.Nome })));
        livroDirOrigem = @Html.Raw(Json.Encode(Model.Autor.Livros.Select(x => new {x.Id,x.Nome })));
        livroEsqOrigem = livroEsqTodos.filter(a => !livroDirOrigem.some(b => a.Id === b.Id));

        var dsl = $('#dualSelectExample').DualSelectList({
            'candidateItems': livroEsqOrigem.map(a => a.Nome),
            'selectionItems': livroDirOrigem.map(a => a.Nome),
            'colors': {
                'itemText': 'white',
                'itemBackground': 'rgb(0, 51, 204)',
                'itemHoverBackground': '#0066ff'
            }
        });

        function CarregaLivro(result) {
            var livro = livroEsqTodos.filter(obj => { return obj.Nome === result})
            var item = {};
            item['Nome'] = livro[0].Nome;
            item['Id'] = livro[0].Id;
            livrosASalvar.push(item);
        }

        function SubmitDados() {

                //Captura Itens da Direta
                var res1 = dsl.getSelection();
                for (var n = 0; n < res1.length; ++n) {
                    CarregaLivro(res1[n]);
                }

                //Captura Itens da Esquerda
                //var res2 = dsl.getCandidate();
                //for (var n = 0; n < res2.length; ++n) {
                //    CarregaObjeto(res2[n]);
                //}

                var nome = $("#txtNome").val();
                var autor = { Id: id, Nome: nome, Livros: livrosASalvar };

                $.ajax({
                    url: '@Url.Action("Edit", "Autor")',
                    type: "POST",
                    data: JSON.stringify({ 'author': autor }),
                    dataType: "json",
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.status == "Success") {
                            alert("Autor cadastrado com Sucesso");
                        } else {
                            alert("Erro ao cadastrar Autor");
                        }
                    },
                    error: function () {
                        alert("Erro na comunicação");
                    }
                });
            }


    </script>
}




